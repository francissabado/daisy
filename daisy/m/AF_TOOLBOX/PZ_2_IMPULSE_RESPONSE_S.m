	function [h, dirac0, t_axis] = PZ_2_IMPULSE_RESPONSE_S(G, Z, P, t_axis)	%	%	Computes the impulse response of a causal analog filter 	%	over the time interval given by t_axis from the poles and zeros.	%	dirac0 is an impulse in the impulse response at t = 0.	%	%	Toolbox for ANALOG FILTERS USING MATLAB, Springer, 2009			% 	Author: 		Lars Wanhammar 2006-02-27	% 	Modified by: 	 		% 	Copyright:		Divison of Electronics Systems	% 					Dept. Electrical Engineering, Linkoping University, Sweden	% 	Version:		1 	% 	Known bugs:		None	% 	Report bugs to:	larsw@isy.liu.se		tol = 100*eps;					% May be adjusted		% Check if equal degrees in case of even order rational functions	if (mod(length(P), 2) == 0) | (length(P) == length(Z))		speccase = 1;		P = [P; 0];	else		speccase = 0;	end	[Residues, P, Mult] = PART_FRACT_EXPANSION(Z, P, G);	h = zeros(1,length(t_axis));			dirac0 = 0;	for k = 1:length(Residues)		m = max(0, Mult(k)-1);		if (speccase == 0)	% Impulse response for Deg(Num) < Deg(Denum)			h = h + (Residues(k)/prod(1:m))*t_axis.^m.*exp(P(k).*t_axis);				else	% Impulse response for for Deg(Num) = Deg(Denum)			if (abs(P(k)) < tol)					switch m+1				case 1					dirac0 = dirac0 + Residues(k);				case 2					h = h + Residues(k);				otherwise					h = h + (Residues(k)/prod(1:m)).*t_axis.^(m-2);				end			end			if (abs(P(k)) > tol)				switch m+1				case 1					dirac0 = dirac0 + Residues(k);					h = h + Residues(k).*P(k).*exp(P(k).*t_axis); 				case 2					h = h + Residues(k).*(t + P(k).*t_axis).*exp(P(k).*t_axis);				otherwise					h = h + (Residues(k)/prod(1:m))*(m*t_axis.^(m-1) + P(k).*t_axis.^m).*exp(P(k).*t_axis);				end			end			end	end	h = real(h);